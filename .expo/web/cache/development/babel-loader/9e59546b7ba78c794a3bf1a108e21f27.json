{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\uC804\\uBCD1\\uC6B1\\\\Documents\\\\GitHub\\\\2021-capstone-thu-2\\\\src\\\\screens\\\\Modal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StackNavigator } from 'react-navigation';\nvar primaryColor = 'rgb(0, 122, 255)';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: true,\n      time: 5\n    };\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.handleTimeout();\n      }, 1000);\n    }\n  }, {\n    key: \"handleConfirm\",\n    value: function handleConfirm(navigation) {\n      console.log('Modal confirmed');\n      navigation.navigate('Home');\n    }\n  }, {\n    key: \"handleTimeout\",\n    value: function handleTimeout() {\n      if (this.state.time == 0) {\n        clearInterval(this.interval);\n        this.handleConfirm(this.props.navigation);\n      } else this.setState({\n        time: parseInt(this.state.time) - 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var modalVisible = this.state.modalVisible;\n      return React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n\n          _this3.setModalVisible(!modalVisible);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.modalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"\\uC9C1\\uC6D0\\uC774 \\uD638\\uCD9C\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(Pressable, {\n        flexDirection: \"row\",\n        style: [styles.button, styles.buttonClose],\n        onPress: function onPress() {\n          return _this3.handleConfirm(_this3.props.navigation);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"\\uD655\\uC778\"), React.createElement(Text, {\n        style: [styles.textStyle, styles.timerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 57\n        }\n      }, this.state.time))))), React.createElement(Pressable, {\n        style: [styles.button, styles.buttonOpen, {\n          display: 'none'\n        }],\n        onPress: function onPress() {\n          return _this3.setModalVisible(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonOpen: {\n    backgroundColor: primaryColor\n  },\n  buttonClose: {\n    backgroundColor: primaryColor\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 24\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 32\n  },\n  timerStyle: {\n    borderWidth: 2,\n    borderColor: 'white',\n    borderRadius: 13,\n    width: 26,\n    height: 26,\n    fontSize: 18,\n    marginLeft: 5\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/전병욱/Documents/GitHub/2021-capstone-thu-2/src/screens/Modal.js"],"names":["React","Component","StackNavigator","primaryColor","App","state","modalVisible","time","setModalVisible","visible","setState","interval","setInterval","handleTimeout","navigation","console","log","navigate","clearInterval","handleConfirm","props","parseInt","styles","centeredView","Alert","alert","modalView","modalText","button","buttonClose","textStyle","timerStyle","buttonOpen","display","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","fontSize","marginBottom","borderWidth","borderColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\r\nimport { StackNavigator } from 'react-navigation';\r\nconst primaryColor = 'rgb(0, 122, 255)';\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n      this.interval = setInterval(() => this.handleTimeout(), 1000);\r\n  }\r\n  state = {\r\n    modalVisible: true,\r\n    time: 5\r\n  };\r\n\r\n  setModalVisible = (visible) => {\r\n    this.setState({ modalVisible: visible });\r\n  }\r\n  handleConfirm(navigation){\r\n    //서버에 직원호출 전달\r\n    console.log('Modal confirmed');\r\n    navigation.navigate('Home');\r\n  }\r\n  handleTimeout(){\r\n    if(this.state.time==0){\r\n      clearInterval(this.interval);\r\n      this.handleConfirm(this.props.navigation);\r\n    }\r\n    else\r\n      this.setState({ time: parseInt(this.state.time)-1 });\r\n  }\r\n\r\n  render() {\r\n    const { modalVisible } = this.state;\r\n    return (\r\n      <View style={styles.centeredView}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            this.setModalVisible(!modalVisible);\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={styles.modalText}>직원이 호출되었습니다.</Text>\r\n              <Pressable flexDirection='row'\r\n                style={[styles.button, styles.buttonClose]}\r\n                onPress={()=>this.handleConfirm(this.props.navigation)}\r\n              >\r\n                <Text style={styles.textStyle}>확인</Text><Text style={[styles.textStyle, styles.timerStyle]}>{this.state.time}</Text>\r\n              </Pressable>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n        <Pressable\r\n          style={[styles.button, styles.buttonOpen, {display:'none'}]}\r\n          onPress={() => this.setModalVisible(true)}\r\n        >\r\n        </Pressable>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: primaryColor,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: primaryColor,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 24,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n    fontSize: 32,\r\n  },\r\n  timerStyle: {\r\n    borderWidth:2,\r\n    borderColor: 'white',\r\n    borderRadius:13,\r\n    width:26,\r\n    height:26,\r\n    fontSize:18,\r\n    marginLeft:5\r\n  }\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}